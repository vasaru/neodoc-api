{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"neo",
				"neo_id"
			],
			[
				"osv",
				"osv"
			],
			[
				"lo",
				"logi	logger.info"
			],
			[
				"ge",
				"getItem"
			],
			[
				"defaul",
				"default"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/assets/javascripts/app.html",
			"settings":
			{
				"buffer_size": 522,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/assets/javascripts/app.js.erb",
			"settings":
			{
				"buffer_size": 2161,
				"line_ending": "Windows"
			}
		},
		{
			"file": "neodoc-api.sublime-project",
			"settings":
			{
				"buffer_size": 233,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config/routes.rb",
			"settings":
			{
				"buffer_size": 2492,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "module Api\n	module V1\n		class DevicesController < ApplicationController\n\n			respond_to	:json\n\n\n			def index\n				params.each do |key,value|\n					Rails.logger.warn \"Param #{key}: #{value}\"\n				end\n				a = Array.new\n				Device.all.each do |os|\n					h = Hash.new\n\n					h[\"name\"]=os.name\n					h[\"id\"]=Integer(os.neo_id)\n					h[\"cls\"]=\"Device\"\n					h[\"url\"]=os.url\n					h[\"vendor\"]=os.productinformation\n					h[\"status\"]=os.status\n					h[\"license\"]=os.license\n					h[\"description\"]=os.description\n					a << h\n\n				end\n				render :json => a\n				\n			end\n\n			def show\n				respond_with Device.find(params[:id])\n			end\n\n			def create\n				Rails.logger.warn \"In Create device params = #{params.class.name}\"\n				i = 0\n				params.each do |key,value|\n					i=i+1\n					Rails.logger.warn \"Param #{i} #{key}: #{value}\"\n				end\n\n				resource = User.find_by_authentication_token( params[:auth_token])\n				ps1 = params.first\n				Rails.logger.warn \"#{ps1.first}\"\n				params1 = ActiveSupport::JSON.decode(ps1.first)[\"formData1\"];\n				params2 = ActiveSupport::JSON.decode(ps1.first)[\"formData2\"];\n\n				Rails.logger.warn \"params1 = #{params1}\"\n				Rails.logger.warn \"params2 = #{params2}\"\n\n				os = Operatingsystem.find(params2[\"operatingsystem\"])\n\n				Rails.logger.warn \"os: #{os.props.inspect}\"\n\n				pid = Neo4j::Node.load(params1[\"pid\"]);\n\n				Rails.logger.warn \"pid: #{pid.props.inspect}\"\n\n\n				@device = Device.new(\"name\"=>params[:name],\"model\"=>params[:deviceType],\"description\"=>params[:description],\"updated_by\"=>resource.neo_id,\"created_by\"=>resource.neo_id)\n#				if @device.save\n					render :json => {:success => true, :network => [@device] }\n#				else\n#					render :json => {:success => false, :message => [@Device.errors], :status=>:unprocessable_entity}\n#				end\n			end\n\n			def update\n				respond_with Device.update(params[:id], params[:Network])\n			end\n\n			def destroy\n				respond_with Device.destroy(params[:id])\n			end\n		end\n	end\nend",
			"file": "app/controllers/api/v1/devices_controller.rb",
			"file_size": 2000,
			"file_write_time": 130140615103457346,
			"settings":
			{
				"buffer_size": 1922,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/controllers/api/v1/osvers_controller.rb",
			"settings":
			{
				"buffer_size": 1615,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/controllers/api/v1/operatingsystems_controller.rb",
			"settings":
			{
				"buffer_size": 1186,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/models/device.rb",
			"settings":
			{
				"buffer_size": 468,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/osver.rb",
			"settings":
			{
				"buffer_size": 525,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/models/operatingsystem.rb",
			"settings":
			{
				"buffer_size": 359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/controllers/api/v1/networks_controller.rb",
			"settings":
			{
				"buffer_size": 3896,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var me = this,\n    maintab = me.getMainTabPanel(),\n\n    // store = me.getStore('IpnumberStore');\n    ipstore = Ext.create('NeoDoc.store.IpnumberStore');\nipstore.storeid = 'Network-IpStore-'+record.id;\n\nnetstore = Ext.create('NeoDoc.store.NetworkInfoStore');\nnetstore.storeid = 'Network-IpInfoStore-'+record.id;\n\n\nconsole.log(\"In onNewnetworkTab\");\nconsole.log('panelId=NetworkTab-'+record.id);\n\nvar tab = maintab.getChildByElement('NetworkTab-'+record.id);\n\nif(!tab) {\n    var networktab = Ext.create('NeoDoc.view.network.MainTabPanel', {\n        title: 'Network - '+record.text,\n        id: 'NetworkTab-'+record.id,\n        itemId: 'NetworkTab-'+record.id,\n        cls: 'Network',\n        closable: true\n    });\n\n    netstore.getProxy().extraParams.whattoget='generalinfo';\n    netstore.getProxy().extraParams.networkid=record.id;\n\n    netstore.load();\n\n    var generaltab = Ext.create('NeoDoc.view.network.GeneralPanel', {\n        title: 'General',\n        id: 'NetworkTab-GeneralPanel'+record.id,\n        itemId: 'NetworkTab-GeneralPanel'+record.id,\n        cls: 'Network',\n        closable: false\n    });\n    var generalview = Ext.create('NeoDoc.view.network.GeneralView', {\n        title: 'General',\n        id: 'NetworkTab-GeneralView'+record.id,\n        itemId: 'NetworkTab-GeneralView'+record.id,\n        cls: 'Network',\n        store: netstore,\n        closable: false\n    });\n\n    generaltab.add(generalview);\n\n    generaltab.add(Ext.create('Ext.panel.Panel', {\n        title: 'Comments',\n        id: 'NetworkTab-GeneralTestPanel'+record.id,\n        itemId: 'NetworkTab-GeneralTestPanel'+record.id,\n        cls: 'Network',\n        padding: 10,\n        width: 400,\n        height: 200\n    }));\n    generaltab.add(Ext.create('Ext.panel.Panel', {\n        title: 'Documents',\n        id: 'NetworkTab-GeneralDocumentPanel'+record.id,\n        itemId: 'NetworkTab-GeneralDocumentPanel'+record.id,\n        cls: 'Network',\n        padding: 10,\n        width: 400,\n        height: 200\n    }));\n\n\n    var iptab = Ext.create('NeoDoc.view.network.IpNumberPanel', {\n        title: 'IpNumbers',\n        id: 'NetworkTab-Ipnumber'+record.id,\n        itemId: 'NetworkTab-Ipnumber'+record.id,\n        cls: 'Network',\n        closable: false\n    });\n\n    var ipgrid = Ext.create('NeoDoc.view.network.IpNumberGrid', {\n        title: 'IpNumberGrid',\n        id: 'NetworkTab-IpnumberGrid'+record.id,\n        itemId: 'NetworkTab-IpnumberGrid'+record.id,\n        cls: 'Network',\n        store: ipstore,\n        closable: false,\n        dockedItems: [\n        {\n            xtype: 'pagingtoolbar',\n            dock: 'bottom',\n            displayInfo: true,\n            store: ipstore\n        }\n        ]\n    });\n\n    //        var ipgridpage = Ext.getCmp('network.ippager');\n\n\n\n\n    ipstore.getProxy().extraParams.whattoget='getiplist';\n    ipstore.getProxy().extraParams.networkid=record.id;\n\n\n    //        ipgridpage.bindStore(ipstore);\n    //        ipgrid.reconfigure(ipstore);\n\n    ipstore.loadPage(1);\n    iptab.add(ipgrid);\n    networktab.add(generaltab);\n    networktab.add(iptab);\n\n    maintab.add(networktab);\n\n    maintab.setActiveTab(networktab);\n    networktab.setActiveTab(generaltab);\n} else {\n    maintab.setActiveTab(tab);\n}\n\n\n",
			"settings":
			{
				"buffer_size": 3229,
				"line_ending": "Unix",
				"name": "var me = this,"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 180.0,
		"selected_items":
		[
			[
				"com",
				"Toggle Comment"
			],
			[
				"ind",
				"Indentation: Convert to Tabs"
			],
			[
				"synt jav",
				"Set Syntax: JavaScript"
			],
			[
				"comm",
				"Toggle Comment"
			],
			[
				"rails",
				"Set Syntax: Ruby on Rails"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"oack",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"ta",
				"Indentation: Convert to Tabs"
			],
			[
				"ref",
				"Project: Refresh Folders"
			],
			[
				"refres",
				"Project: Refresh Folders"
			],
			[
				"Pack",
				"Preferences: Package Control Settings â€“ User"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/henrik/Source/neodoc-api/README.md",
		"/home/henrik/Source/sencha/neodoc2/NeoDoc2/app/controller/Device.js",
		"/home/henrik/Source/neodoc-api/neodoc-api.sublime-project",
		"/d/Users/henrik/AppData/Roaming/Sublime Text 3/Packages/User/Ruby on Rails.sublime-settings",
		"/W/neodoc-api/app/models/user.rb",
		"/W/neodoc-api/app/views/locations/index.html.erb",
		"/W/neodoc-api/app/controllers/locations_controller.rb",
		"/W/neodoc-api/app/controllers/api/v1/ipnumbers_controller.rb",
		"/W/neodoc-api/config/initializers/wrap_parameters.rb",
		"/W/neodoc-api/lib/api_constraints.rb",
		"/W/neodoc-api/config/initializers/session_store.rb",
		"/W/neodoc-api/app/controllers/home_controller.rb",
		"/W/neodoc-api/app/views/layouts/application.html.erb",
		"/W/neodoc-api/config/initializers/devise.rb",
		"/W/neodoc-api/app/assets/javascripts/app/controller/Authentication.js",
		"/W/neodoc-api/app/assets/javascripts/app.js.erb",
		"/W/neodoc-api/app/controllers/api/v1/sessions_controller.rb",
		"/W/neodoc-api/app/assets/javascripts/app/controller/Authorization.js",
		"/W/neodoc-api/app/assets/javascripts/app/controller/Main.js",
		"/W/neodoc-api/app/controllers/api/v1/base_api_controller.rb",
		"/W/neodoc-api/app/controllers/api/v1/registrations_controller.rb"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"osv",
			"Osversion",
			"osversion",
			"Osversion",
			"update",
			"patch",
			"major",
			"os",
			"Operatingsystem",
			"role",
			"Network",
			"Location",
			"Product"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Ipnumber",
			"Network",
			"Location"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/assets/javascripts/app.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 522,
						"regions":
						{
						},
						"selection":
						[
							[
								522,
								522
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/assets/javascripts/app.js.erb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2161,
						"regions":
						{
						},
						"selection":
						[
							[
								816,
								816
							]
						],
						"settings":
						{
							"syntax": "Packages/Rails/JavaScript (Rails).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 261.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "neodoc-api.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 233,
						"regions":
						{
						},
						"selection":
						[
							[
								220,
								220
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "config/routes.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2492,
						"regions":
						{
						},
						"selection":
						[
							[
								438,
								438
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/controllers/api/v1/devices_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1922,
						"regions":
						{
						},
						"selection":
						[
							[
								766,
								766
							]
						],
						"settings":
						{
							"syntax": "Packages/Rails/Ruby on Rails.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/controllers/api/v1/osvers_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1615,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/controllers/api/v1/operatingsystems_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1186,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "app/models/device.rb",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 468,
						"regions":
						{
						},
						"selection":
						[
							[
								468,
								468
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app/models/osver.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 525,
						"regions":
						{
						},
						"selection":
						[
							[
								404,
								404
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "app/models/operatingsystem.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 359,
						"regions":
						{
						},
						"selection":
						[
							[
								327,
								327
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "app/controllers/api/v1/networks_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3896,
						"regions":
						{
						},
						"selection":
						[
							[
								380,
								380
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3229,
						"regions":
						{
						},
						"selection":
						[
							[
								3229,
								3229
							]
						],
						"settings":
						{
							"auto_name": "var me = this,",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.8025,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"project": "neodoc-api.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"read",
				"neodoc-api/README.md"
			],
			[
				"oper",
				"neodoc-api/app/models/operatingsystem.rb"
			],
			[
				"opercont",
				"neodoc-api/app/controllers/api/v1/operatingsystems_controller.rb"
			],
			[
				"versio",
				"neodoc-api/app/models/version.rb"
			],
			[
				"opercon",
				"neodoc-api/app/controllers/api/v1/operatingsystems_controller.rb"
			],
			[
				"route",
				"neodoc-api/config/routes.rb"
			],
			[
				"app",
				"app/assets/javascripts/app.js.erb"
			],
			[
				"wrap",
				"config\\initializers\\wrap_parameters.rb"
			],
			[
				"session",
				"config\\initializers\\session_store.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 212.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
