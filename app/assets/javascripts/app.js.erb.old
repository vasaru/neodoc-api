/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.Loader.setConfig({
    enabled: true
});

Ext.application({
        <% Dir[File.expand_path('/app/*/', __FILE__)].each do |subdir| %>
          <%= File.basename(subdir) %>s: <%=
            # omit all file extensions (js, js.erb, etc.) from the file name
            Dir[subdir + '/*.js*'].map {|f| File.basename(f)[/^[^.]+/] }.to_json
          %>,
    <% end %>

    stores: [
        'IpnumberStore',
        'countryStore',
        'LocationsTreeStore',
        'Networks',
        'MyDirectStore1'
    ],
    views: [
        'locationform',
        'device.createwindow',
        'network.CreateWindow',
        'location.Treepanel',
        'document.ViewPanel',
        'location.CreateWindow',
        'network.ListPanel',
        'network.ViewPanel',
        'device.newPhysicalServer',
        'widget.loginView',
        'widget.applicationView'
    ],
    autoCreateViewport: true,
    appFolder: '/assets/app',
    controllers: [
        'Main',
        'Documents',
        'Networks',
        'Device'
    ],
    name: 'NeoDoc'
});
Ext.onReady(function(){
        Ext.Ajax.on('beforerequest', function(conn, options) {
                // always include the auth_token.. 
                        var currentUser = Ext.decode( localStorage.getItem('neodocUser'));

                        if( currentUser !== null){
                                var auth_token_value = currentUser['auth_token'];

                                Ext.Ajax.extraParams = { auth_token: auth_token_value };
                        }
                // include the csrf prevention 
            var content, metatag;
            metatag = Ext.select('meta[name="csrf-token"]');
            if (metatag.first() != null) {
              content = metatag.first().dom.content;
              options.headers || (options.headers = {});
              return options.headers["X-CSRF-Token"] = content;
            }
          }, this);
});
