/*
 * File: app/controller/Network.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('NeoDoc.controller.Network', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'networkCreateWindow',
            selector: 'networkcreatewindow'
        },
        {
            ref: 'networkMainTab',
            selector: 'networkmaintabpanel'
        },
        {
            ref: 'MainTabPanel',
            selector: 'maintabpanel'
        }
    ],

    onCreateNetwork: function(button, e, eOpts) {
        console.log("In onCreateNetwork");
        var me = this,
            win = this.getNetworkCreateWindow(), 
            form = win.items.items[0].getForm();

        var nameField = form.findField('name');
        console.log('name:',nameField);
        if (form.isValid()) {    
            win.setLoading('Submitting...');
            form.submit({
                url: '/api/networks',
                headers: {'Accept':'application/vnd.neodocapi.v1' },
                method: 'POST',
                success: function(result, action) {
                    Ext.Msg.alert('Created network successfully!');
                    var store = Ext.StoreMgr.get('navTreeStore');
                    store.load();
                    win.setLoading(false);
                    win.destroy();
                    // TODO: Reload tree store
                },
                failure: function(result, action) {
                    Ext.Msg.alert('Failed to create network!\n\n'+result);
                    win.setLoading(false);
                }
            });
        }

    },

    onNewnetworktab: function(record) {
        var me = this,
            maintab = me.getMainTabPanel(),

            // store = me.getStore('IpnumberStore');
            ipstore = Ext.create('NeoDoc.store.IpnumberStore');
        ipstore.storeid = 'Network-IpStore-'+record.id;

        netstore = Ext.create('NeoDoc.store.NetworkInfoStore');
        netstore.storeid = 'Network-IpInfoStore-'+record.id;


        console.log("In onNewnetworkTab");
        console.log('panelId=NetworkTab-'+record.id);

        var tab = maintab.getChildByElement('NetworkTab-'+record.id);

        if(!tab) {
            var networktab = Ext.create('NeoDoc.view.network.MainTabPanel', {
                title: 'Network - '+record.text,
                id: 'NetworkTab-'+record.id,
                itemId: 'NetworkTab-'+record.id,
                cls: 'Network',
                closable: true
            });

            netstore.getProxy().extraParams.whattoget='generalinfo';
            netstore.getProxy().extraParams.networkid=record.id;

            netstore.load();

            var generaltab = Ext.create('NeoDoc.view.network.GeneralPanel', {
                title: 'General',
                id: 'NetworkTab-GeneralPanel'+record.id,
                itemId: 'NetworkTab-GeneralPanel'+record.id,
                cls: 'Network',
                closable: false
            });
            var generalview = Ext.create('NeoDoc.view.network.GeneralView', {
                title: 'General',
                id: 'NetworkTab-GeneralView'+record.id,
                itemId: 'NetworkTab-GeneralView'+record.id,
                cls: 'Network',
                store: netstore,
                closable: false
            });

            generaltab.add(generalview);

            var iptab = Ext.create('NeoDoc.view.network.IpNumberPanel', {
                title: 'IpNumbers',
                id: 'NetworkTab-Ipnumber'+record.id,
                itemId: 'NetworkTab-Ipnumber'+record.id,
                cls: 'Network',
                closable: false
            });

            var ipgrid = Ext.create('NeoDoc.view.network.IpNumberGrid', {
                title: 'IpNumberGrid',
                id: 'NetworkTab-IpnumberGrid'+record.id,
                itemId: 'NetworkTab-IpnumberGrid'+record.id,
                cls: 'Network',
                store: ipstore,
                closable: false,
                dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    displayInfo: true,
                    store: ipstore
                }
                ]
            });

            //        var ipgridpage = Ext.getCmp('network.ippager');




            ipstore.getProxy().extraParams.whattoget='getiplist';
            ipstore.getProxy().extraParams.networkid=record.id;


            //        ipgridpage.bindStore(ipstore);
            //        ipgrid.reconfigure(ipstore);

            ipstore.loadPage(1);
            iptab.add(ipgrid);
            networktab.add(generaltab);
            networktab.add(iptab);

            maintab.add(networktab);

            maintab.setActiveTab(networktab);
        } else {
            maintab.setActiveTab(tab);
        }



    },

    init: function(application) {
        this.control({
            "networkcreatewindow button[action=newnetwork]": {
                click: this.onCreateNetwork
            }
        });

        application.on({
            newnetworktab: {
                fn: this.onNewnetworktab,
                scope: this
            }
        });
    }

});
