/*
 * File: app/view/device/IpNumberGrid.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('NeoDoc.view.device.IpNumberGrid', {
    extend: 'Ext.grid.Panel',

    id: 'NetworkIpTabGrid1',
    itemId: 'NetworkIpTabGrid',
    autoScroll: true,
    header: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 126,
                    defaultWidth: 140,
                    sortable: false,
                    dataIndex: 'ipv4',
                    text: 'IP'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return record.data.network.netmask;
                    },
                    width: 126,
                    defaultWidth: 140,
                    sortable: false,
                    dataIndex: 'netmask',
                    text: 'Netmask'
                },
                {
                    xtype: 'gridcolumn',
                    width: 166,
                    dataIndex: 'description',
                    text: 'Description',
                    editor: {
                        xtype: 'textareafield',
                        name: 'description'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'status',
                    groupable: true,
                    text: 'Status',
                    editor: {
                        xtype: 'combobox',
                        name: 'statusfield',
                        allowBlank: false,
                        allowOnlyWhitespace: false,
                        editable: false,
                        queryMode: 'local',
                        store: 'IpStatusStore',
                        valueField: 'name'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return record.data.network.network_name;

                    },
                    dataIndex: 'networks',
                    text: 'Network'
                },
                {
                    xtype: 'datecolumn',
                    dataIndex: 'updated_at',
                    text: 'Last Updated'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'updated_by',
                    text: 'Last Updated By'
                }
            ]
        });

        me.callParent(arguments);
    }

});